{
  "grub": {
    "GRUB_TIMEOUT": "1"
  },
  "iptables": {
    "iptables_rules": [
      "*filter",
      ":INPUT DROP [0:0]",
      ":FORWARD DROP [0:0]",
      ":OUTPUT ACCEPT [0:0]",
      ":HARDPASS - [0:0]",
      ":SYNFLOOD - [0:0]",
      ":TCP - [0:0]",
      ":UDP - [0:0]",
      "# Allow loopback",
      "-A INPUT -i lo -j ACCEPT",
      "# Allow established",
      "-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT",
      "# Drop invalid",
      "-A INPUT -m conntrack --ctstate INVALID -j DROP",
      "# Allow ping",
      "-A INPUT -p icmp -m icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT",
      "# Jump to tcp table for new tcp",
      "-A INPUT -p tcp -m tcp --tcp-flags ACK,FIN,RST,SYN SYN -m conntrack --ctstate NEW -j TCP",
      "# Jump to udp table for new udp",
      "-A INPUT -p udp -m conntrack --ctstate NEW -j UDP",
      "# Otherwise reject",
      "-A INPUT -j HARDPASS",
      "# Allow established",
      "# -A FORWARD -m conntrack --ctstate DNAT,ESTABLISHED,RELATED -j ACCEPT",
      "# Drop invalid",
      "# -A FORWARD -m conntrack --ctstate INVALID -j DROP",
      "# Otherwise reject",
      "#-A FORWARD -j HARDPASS",
      "# Reject appropriately for each protocol",
      "-A HARDPASS -p tcp -j REJECT --reject-with tcp-reset",
      "-A HARDPASS -p udp -j REJECT --reject-with icmp-port-unreachable",
      "-A HARDPASS -j REJECT --reject-with icmp-proto-unreachable",
      "# Protect from SYN flood",
      "-A SYNFLOOD -m limit --limit 64/min --limit-burst 64 -j RETURN",
      "-A SYNFLOOD -j HARDPASS",
      "# Check for SYN flood",
      "-A TCP -j SYNFLOOD",
      "# Allow:",
      "# - SSH ({{{sshd_port:-22}}})",
      "-A TCP -p tcp -m multiport --dports {{{sshd_port:-22}}} -j ACCEPT",
      "# Allow:",
      "# - OpenVPN (1194)",
      "# - Wireguard (443)",
      "# -A UDP -p udp -m multiport --dports 443,1194 -j ACCEPT",
      "COMMIT",
      "*nat",
      ":PREROUTING ACCEPT [0:0]",
      ":INPUT ACCEPT [0:0]",
      ":OUTPUT ACCEPT [0:0]",
      ":POSTROUTING ACCEPT [0:0]",
      "# Masquerade",
      "# -A POSTROUTING -o eth0 -j MASQUERADE",
      "COMMIT",
      "*raw",
      ":PREROUTING ACCEPT [0:0]",
      ":OUTPUT ACCEPT [0:0]",
      "-A PREROUTING -m rpfilter -j ACCEPT",
      "-A PREROUTING -j DROP",
      "COMMIT"
    ],
    "ip6tables_rules": [
      "*filter",
      ":INPUT DROP [0:0]",
      ":FORWARD DROP [0:0]",
      ":OUTPUT ACCEPT [0:0]",
      ":HARDPASS - [0:0]",
      ":SYNFLOOD - [0:0]",
      ":TCP - [0:0]",
      ":UDP - [0:0]",
      "# Allow loopback",
      "-A INPUT -i lo -j ACCEPT",
      "# Allow established",
      "-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT",
      "# Drop invalid",
      "-A INPUT -m conntrack --ctstate INVALID -j DROP",
      "# Allow ping",
      "-A INPUT -p ipv6-icmp -m icmp6 --icmpv6-type 128 -m conntrack --ctstate NEW -j ACCEPT",
      "# Allow IPv6 ICMP for router advertisements (add needed subnets)",
      "-A INPUT -s fe80::/10 -p ipv6-icmp -j ACCEPT",
      "# Jump to tcp table for new tcp",
      "-A INPUT -p tcp -m tcp --tcp-flags ACK,FIN,RST,SYN SYN -m conntrack --ctstate NEW -j TCP",
      "# Jump to udp table for new udp",
      "-A INPUT -p udp -m conntrack --ctstate NEW -j UDP",
      "# Otherwise reject",
      "-A INPUT -j HARDPASS",
      "# Allow established",
      "# -A FORWARD -m conntrack --ctstate DNAT,ESTABLISHED,RELATED -j ACCEPT",
      "# Drop invalid",
      "# -A FORWARD -m conntrack --ctstate INVALID -j DROP",
      "# Otherwise reject",
      "#-A FORWARD -j HARDPASS",
      "# Reject appropriately for each protocol",
      "-A HARDPASS -p tcp -j REJECT --reject-with tcp-reset",
      "-A HARDPASS -p udp -j REJECT --reject-with icmp6-port-unreachable",
      "-A HARDPASS -j REJECT --reject-with icmp6-port-unreachable",
      "# Protect from SYN flood",
      "-A SYNFLOOD -m limit --limit 64/min --limit-burst 64 -j RETURN",
      "-A SYNFLOOD -j HARDPASS",
      "# Check for SYN flood",
      "-A TCP -j SYNFLOOD",
      "# Allow:",
      "# - SSH ({{{sshd_port:-22}}})",
      "-A TCP -p tcp -m multiport --dports {{{sshd_port:-22}}} -j ACCEPT",
      "# Allow:",
      "# - OpenVPN (1194)",
      "# - Wireguard (443)",
      "# -A UDP -p udp -m multiport --dports 443,1194 -j ACCEPT",
      "# Allow DHCPv6 (add needed subnets)",
      "-A UDP -s fe80::/10 -p udp -m udp --dport 546 -m state --state NEW -j ACCEPT",
      "COMMIT",
      "*raw",
      ":PREROUTING ACCEPT [0:0]",
      ":OUTPUT ACCEPT [0:0]",
      "-A PREROUTING -m rpfilter -j ACCEPT",
      "-A PREROUTING -j DROP",
      "COMMIT"
    ]
  },
  "sddm": {
    "sddm_conf": [
      "[Autologin]",
      "User={{{user.name:-nemesis}}}",
      "Session={{{session:-lxqt}}}.desktop",
      "",
      "[General]",
      "Numlock=on"
    ]
  },
  "network": {
    "dhcp_network": [
      "[Match]",
      "Name=en*",
      "",
      "[Network]",
      "DHCP=ipv4"
    ]
  },
  "packages": {
    "aur": {
      "default": [],
      "graphical": [],
      "misc": [
        "burpsuite",
        "maltego",
        "nessus",
        "samdump2",
        "xprobe2"
      ],
      "nemesis_tools": [
        "amap-bin",
        "android-sdk-platform-tools",
        "dirb",
        "dirbuster",
        "dirstalk",
        "httprint",
        "isic",
        "openvas-cli",
        "openvas-scanner",
        "pyrit",
        "rockyou",
        "vncrack"
      ]
    },
    "default": [
      "aspell",
      "automake",
      "bind-tools",
      "bzip2",
      "codespell",
      "cpio",
      "cronie",
      "ctags",
      "curl",
      "dnsmasq",
      "exfat-utils",
      "expect",
      "gdb",
      "git",
      "git-crypt",
      "go-yq",
      "gvim",
      "gzip",
      "inetutils",
      "iproute2",
      "jdk-openjdk",
      "jq",
      "lua",
      "man-db",
      "mlocate",
      "moreutils",
      "mutt",
      "ncdu",
      "ncurses",
      "neovim",
      "numlockx",
      "openconnect",
      "openvpn",
      "p7zip",
      "par2cmdline",
      "parallel",
      "perl-file-mimeinfo",
      "pygmentize",
      "python",
      "python-pip",
      "ranger",
      "ripgrep",
      "rsync",
      "ruby",
      "shellcheck",
      "socat",
      "tcl",
      "tmux",
      "unrar",
      "unzip",
      "upx",
      "vi",
      "wireguard-tools",
      "words",
      "wpa_supplicant",
      "xz",
      "zip",
      "zsh",
      "zsh-completions",
      "zsh-history-substring-search",
      "zsh-syntax-highlighting"
    ],
    "graphical": [
      "alsa-firmware",
      "alsa-tools",
      "alsa-utils",
      "blueman",
      "chromium",
      "keepassxc",
      "ksnip",
      "leafpad",
      "mupdf",
      "oxygen-icons",
      "pamixer",
      "pavucontrol-qt",
      "pcmanfm-qt",
      "pulseaudio",
      "pulseaudio-bluetooth",
      "ttf-dejavu",
      "ttf-dejavu-nerd",
      "viewnior",
      "wmctrl",
      "x11-ssh-askpass",
      "x11vnc",
      "xclip",
      "xdg-user-dirs",
      "xdotool",
      "xf86-input-synaptics",
      "xf86-video-ati",
      "xf86-video-intel",
      "xf86-video-vesa",
      "xorg-server",
      "xorg-xinput",
      "xorg-xkill",
      "xorg-xmodmap",
      "xorg-xrandr",
      "xorg-xrdb",
      "xscreensaver",
      "xsel",
      "xterm"
    ],
    "nemesis_tools": [
      "aircrack-ng",
      "android-tools",
      "binwalk",
      "cifs-utils",
      "cowpatty",
      "fcrackzip",
      "firejail",
      "foremost",
      "gcc-multilib",
      "gnu-netcat",
      "hashcat",
      "hashcat-utils",
      "hping",
      "hydra",
      "impacket",
      "john",
      "masscan",
      "metasploit",
      "mingw-w64-headers",
      "nasm",
      "ncrack",
      "net-snmp",
      "nfs-utils",
      "nikto",
      "nmap",
      "ophcrack",
      "radare2",
      "sqlmap",
      "tcpdump",
      "wireshark-qt",
      "zaproxy",
      "zmap"
    ]
  },
  "ssh": {
    "sshd_config": {
      "PasswordAuthentication": "yes",
      "PermitRootLogin": "without-password",
      "Port": "{{{sshd_port:-22}}}",
      "PrintLastLog": "no",
      "PrintMotd": "no",
      "UseDNS": "no",
      "X11Forwarding": "no"
    }
  },
  "users": [
    {
      "authorized_keys": ["{{{user.authorized_key}}}"],
      "groups": "",
      "name": "root",
      "password": "",
      "shell": "/usr/bin/bash",
      "ssh_config": []
    },
    {
      "authorized_keys": ["{{{user.authorized_key}}}"],
      "groups": "docker,wheel,wireshark",
      "name": "{{{user.name:-nemesis}}}",
      "password": "{{{user.password:-nemesis}}}",
      "shell": "/usr/bin/zsh",
      "ssh_config": [
        "# No agent or X11 forwarding",
        "Host *",
        "    ForwardAgent no",
        "    ForwardX11 no",
        "    HashKnownHosts yes",
        "    IdentityFile ~/.ssh/{{{hostname:-nemesis}}}",
        "    LogLevel Error"
      ]
    }
  ]
}
